{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoginPending: false,\n  isLoginSuccess: false,\n  errorMessage: \"\",\n  user: {}\n};\n\nfunction callLoginApi(email, password) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(() => {\n      if (email === \"user@gmail.com\" && password === \"12345\") {\n        resolve({\n          email\n        });\n      } else {\n        reject(\"Invalid email and password\");\n      }\n    }, 1000);\n  });\n}\n\nexport const authLoginAPI = createAsyncThunk(\"auth/login\", async _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n\n  try {\n    const response = await callLoginApi(email, password);\n    return response.email;\n  } catch (err) {\n    throw err;\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {},\n\n  extraReducers(builder) {\n    builder.addCase(authLoginAPI.pending, state => {\n      state.isLoginPending = true;\n      state.isLoginSuccess = false;\n      state.errorMessage = \"\";\n    }).addCase(authLoginAPI.fulfilled, (state, action) => {\n      console.log(\"fulfilled\");\n      console.log(action);\n      const {\n        email\n      } = action.payload;\n      state.isLoginPending = false;\n      state.isLoginSuccess = true;\n      state.user = {\n        email\n      };\n      state.errorMessage = \"\";\n    }).addCase(authLoginAPI.rejected, (state, action) => {\n      console.log(action, \"rejected\");\n      state.isLoginPending = false;\n      state.isLoginSuccess = false;\n      state.errorMessage = action.error.message;\n    });\n  }\n\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","isLoginPending","isLoginSuccess","errorMessage","user","callLoginApi","email","password","Promise","resolve","reject","setTimeout","authLoginAPI","response","err","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","console","log","payload","rejected","error","message","reducer"],"sources":["/Users/arif/_Arif/Hactive8/RCTN-KS05 React Hactiv8/Belajar/sesi-11/hello-redux-login/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n  isLoginPending: false,\n  isLoginSuccess: false,\n  errorMessage: \"\",\n  user: {},\n}\n\nfunction callLoginApi(email, password) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(() => {\n      if (email === \"user@gmail.com\" && password === \"12345\") {\n        resolve({ email })\n      } else {\n        reject(\"Invalid email and password\")\n      }\n    }, 1000)\n  })\n}\n\nexport const authLoginAPI = createAsyncThunk(\n  \"auth/login\",\n  async ({ email, password }) => {\n    try {\n      const response = await callLoginApi(email, password)\n      return response.email\n    } catch (err) {\n      throw err\n    }\n  }\n)\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(authLoginAPI.pending, (state) => {\n        state.isLoginPending = true\n        state.isLoginSuccess = false\n        state.errorMessage = \"\"\n      })\n      .addCase(authLoginAPI.fulfilled, (state, action) => {\n        console.log(\"fulfilled\")\n        console.log(action)\n        const { email } = action.payload\n        state.isLoginPending = false\n        state.isLoginSuccess = true\n        state.user = { email }\n        state.errorMessage = \"\"\n      })\n      .addCase(authLoginAPI.rejected, (state, action) => {\n        console.log(action, \"rejected\")\n        state.isLoginPending = false\n        state.isLoginSuccess = false\n        state.errorMessage = action.error.message\n      })\n  },\n})\n\nexport default authSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;EACnBC,cAAc,EAAE,KADG;EAEnBC,cAAc,EAAE,KAFG;EAGnBC,YAAY,EAAE,EAHK;EAInBC,IAAI,EAAE;AAJa,CAArB;;AAOA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuC;EACrC,OAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;IAC5CC,UAAU,CAAC,MAAM;MACf,IAAIL,KAAK,KAAK,gBAAV,IAA8BC,QAAQ,KAAK,OAA/C,EAAwD;QACtDE,OAAO,CAAC;UAAEH;QAAF,CAAD,CAAP;MACD,CAFD,MAEO;QACLI,MAAM,CAAC,4BAAD,CAAN;MACD;IACF,CANS,EAMP,IANO,CAAV;EAOD,CARM,CAAP;AASD;;AAED,OAAO,MAAME,YAAY,GAAGb,gBAAgB,CAC1C,YAD0C,EAE1C,cAA+B;EAAA,IAAxB;IAAEO,KAAF;IAASC;EAAT,CAAwB;;EAC7B,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMR,YAAY,CAACC,KAAD,EAAQC,QAAR,CAAnC;IACA,OAAOM,QAAQ,CAACP,KAAhB;EACD,CAHD,CAGE,OAAOQ,GAAP,EAAY;IACZ,MAAMA,GAAN;EACD;AACF,CATyC,CAArC;AAYP,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC5BkB,IAAI,EAAE,MADsB;EAE5BhB,YAF4B;EAG5BiB,QAAQ,EAAE,EAHkB;;EAI5BC,aAAa,CAACC,OAAD,EAAU;IACrBA,OAAO,CACJC,OADH,CACWR,YAAY,CAACS,OADxB,EACkCC,KAAD,IAAW;MACxCA,KAAK,CAACrB,cAAN,GAAuB,IAAvB;MACAqB,KAAK,CAACpB,cAAN,GAAuB,KAAvB;MACAoB,KAAK,CAACnB,YAAN,GAAqB,EAArB;IACD,CALH,EAMGiB,OANH,CAMWR,YAAY,CAACW,SANxB,EAMmC,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAClDC,OAAO,CAACC,GAAR,CAAY,WAAZ;MACAD,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACA,MAAM;QAAElB;MAAF,IAAYkB,MAAM,CAACG,OAAzB;MACAL,KAAK,CAACrB,cAAN,GAAuB,KAAvB;MACAqB,KAAK,CAACpB,cAAN,GAAuB,IAAvB;MACAoB,KAAK,CAAClB,IAAN,GAAa;QAAEE;MAAF,CAAb;MACAgB,KAAK,CAACnB,YAAN,GAAqB,EAArB;IACD,CAdH,EAeGiB,OAfH,CAeWR,YAAY,CAACgB,QAfxB,EAekC,CAACN,KAAD,EAAQE,MAAR,KAAmB;MACjDC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,UAApB;MACAF,KAAK,CAACrB,cAAN,GAAuB,KAAvB;MACAqB,KAAK,CAACpB,cAAN,GAAuB,KAAvB;MACAoB,KAAK,CAACnB,YAAN,GAAqBqB,MAAM,CAACK,KAAP,CAAaC,OAAlC;IACD,CApBH;EAqBD;;AA1B2B,CAAD,CAA7B;AA6BA,eAAef,SAAS,CAACgB,OAAzB"},"metadata":{},"sourceType":"module"}